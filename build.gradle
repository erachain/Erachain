import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:grgit:1.7.2'
        classpath 'io.github.fvarrui:javapackager:1.6.7'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'groovy'
    //    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}
apply plugin: 'io.github.fvarrui.javapackager.plugin'


lombok {
    version = '1.18.4'
    sha256 = ""
}

ext {
    //git = org.ajoberstar.grgit.Grgit.open()
    slf4jVersion = '1.7.25'
    git = Grgit.open(dir: rootProject.rootDir)
    rev = git.head().id
    rev = git.head().getAbbreviatedId(8)
    springbootVersion = '2.0.5.RELEASE'
}

//String versionEra = "4.11.08-${git.head().abbreviatedId}"
String versionEra = "6.3.01"
archivesBaseName = 'Erachain'
group 'org.erachain'
//version versionEra
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://artifacts.alfresco.com/nexus/content/repositories/public/"
    }
    jcenter() // or Maven central, required for Lombok dependency
}

compileJava {
    options.encoding = "UTF-8"
}

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'org.jetbrains:annotations:19.0.0'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.4'
// https://mvnrepository.com/artifact/org.rocksdb/rocksdbjni
    compile group: 'org.rocksdb', name: 'rocksdbjni', version: '6.4.6'
    compile "com.madgag.spongycastle:core:1.58.0.0"
    compile "com.madgag.spongycastle:prov:1.58.0.0"
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-net', name: 'commons-net', version: '3.3'
    compile group: 'com.googlecode.java-diff-utils', name: 'diffutils', version: '1.3.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    compile group: 'com.toedter', name: 'jcalendar', version: '1.4'
    compile group: 'com.cedarsoftware', name: 'json-io', version: '4.8.0'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.2'
    compile group: 'org.mapdb', name: 'mapdb', version: '1.0.7'
    compile group: 'com.mitchellbosecke', name: 'pebble', version: '1.6.0'
    compile group: 'es.nitaur.markdown', name: 'txtmark', version: '0.16'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    compile group: 'net.sf.tinylaf', name: 'tinylaf', version: '1.4.0'
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.22.2'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.22.2'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.22.2'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.7.v20160115'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.7.v20160115'
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.3.7.v20160115'
    compile group: 'org.swinglabs', name: 'pdf-renderer', version: '1.0.5'
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"

//    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    //compile group: 'com.coverity.security', name: 'coverity-escapers', version: '1.1.1'
    //compile group: 'org.jvnet.mimepull', name: 'mimepull', version: '1.9.6'
    //compile group: 'com.twitter', name: 'twitter-text', version: '1.13.0'


    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'

    //compile "org.springframework.boot:spring-boot-starter-web:${springbootVersion}"
    //compile "org.springframework.boot:spring-boot:${springbootVersion}"
    ////compile group: 'org.apache.flink', name: 'flink-core', version: '1.8.0'
}

jar {
    //mainClassName = "org.erachain.Start"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

//    from {
//        configurations.runtime
//    }

    baseName = "erachain"
    destinationDir project.file('build/libs/Erachain')

    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'

    manifest {
        attributes(
                'Main-Class': 'org.erachain.Start',
                'Implementation-Title': 'Gradle Build: ' + project.name,
                'Implementation-Version': versionEra,
                'Build-Time': new Date().format("yyyy-MM-dd HH:mm:ssZ"),
                'Git-Commit': rev,
                'Git-Branch': git.branch.current.getName(),
//                'Class-Path': configurations.runtime.files.collect{"libs/"+"$it.name" }.join(' ')
        )
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'ERA/resources'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'ERA_TEST/resources'
        }
    }

}

build {
    finalizedBy = ["CreateZip", "CopyResourse"]
}

task CopyResourse {

    copy {
        from 'ERA'
        into 'build/libs/Erachain'
        include '*Licence*'
        include 'market.json'
        include 'peers*'
        include 'start*'
        include 'makePreview*'
    }

    copy {
        from 'ERA/resources'
        into 'build/libs/Erachain/resources'
    }
    copy {
        from 'ERA/web'
        into 'build/libs/Erachain/web'
    }
    copy {
        from 'ERA/languages'
        into 'build/libs/Erachain/languages'
    }
    copy {
        from 'ERA/themes'
        into 'build/libs/Erachain/themes'
    }
    copy {
        from 'ERA/sounds'
        into 'build/libs/Erachain/sounds'
    }
    copy {
        from 'ERA/images'
        into 'build/libs/Erachain/images'
    }
    copy {
        from 'ERA/z_SIDECHAIN_EXAMPLES'
        into 'build/libs/Erachain/z_SIDECHAIN_EXAMPLES'
    }
    copy {
        from 'ERA/z_START_EXAMPLES'
        into 'build/libs/Erachain/z_START_EXAMPLES'
    }
    copy {
        from 'ERA/SSL'
        into 'build/libs/Erachain/SSL'
    }
}

task CreateZip(type: Zip) {

    from 'build/libs/'
    include 'Erachain/'
    exclude 'Erachain/datachain'
    exclude 'Erachain/datalocal'
    exclude 'Erachain/datatemp'
    exclude 'Erachain/dataWallet'
    exclude 'Erachain/walletKeys'
    archiveName 'Erachain' + '.zip'
    destinationDir(file('build/libs/'))
}

//task copyToLib(type: Copy){
//    into "build/libs/Erachain/libs"
//    from configurations.runtime
//}

//build.dependsOn(copyToLib)

task packageApp(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    displayName 'Erachain'
    version versionEra
    organizationName 'ERACHAIN WORLD PTE LTD'
    organizationUrl 'erachain.org'
    organizationEmail 'info@erachain.org'

    mainClass 'org.erachain.Start'
    platform 'mac'
    runnableJar file('build/libs/Erachain/erachain.jar')
    bundleJre true
    jrePath file('/Users/grigoreo/zulu-8.jre/')
    additionalResources = file('build/libs/Erachain/').listFiles()
    copyDependencies false

    macConfig {
        appId = 'org.erachain.app'
        generatePkg = false
        macStartup = 'ARM64'
        relocateJar = false
        icnsFile = file('build/libs/Erachain/images/erachain.icns')
        infoPlist.bundlePackageType = 'APPL'

        backgroundImage = file('build/libs/Erachain/images/installer.png')
        windowWidth = 500
        windowHeight = 360
        iconSize = 100
        iconX = 64
        iconY = 140
        appsLinkIconX = 352
        appsLinkIconY = 140
        volumeName = 'Erachain'
        volumeIcon = file('build/libs/Erachain/images/erachain.icns')
    }
}